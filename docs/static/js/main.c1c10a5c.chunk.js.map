{"version":3,"sources":["components/screen/PhoneScreen.tsx","models/questions.ts","context/question_context.ts","components/buttons/next-button/NextButton.tsx","components/card/Card.tsx","containers/option/QOption.tsx","containers/question-title/QuestionTitle.tsx","containers/question-card/QuestionCard.tsx","containers/question-meter/QuestionMeter.tsx","assets/icons/unicorn_sleep.png","assets/icons/unicorn_woke.png","containers/phone/Phone.tsx","helpers-funcs/m-fetch.ts","helpers-funcs/m-fill-model.ts","components/buttons/les-go-button/LesGoButton.tsx","components/header/Header.tsx","components/home/Home.tsx","context/QuestionContextProvider.tsx","App.jsx","index.js"],"names":["PhoneScreen","props","className","children","Question","question","title","category","type","difficulty","correctOption","incorrectOptions","options","correctOptionNo","this","correctPos","Math","ceil","random","splice","Questions","QuestionContext","React","createContext","qStatus","setQStatus","newQStatus","qNumber","setQNumber","newQNumber","questions","setQuestions","newQuestions","NextButton","ctx","useContext","onClick","Card","style","width","height","Option","isChosen","QuestionTitle","QuestionCard","useState","setQuestion","parser","DOMParser","useEffect","parseFromString","body","textContent","QuestionMeter","questionNumber","setQuestionNumber","length","totalQuestions","setTotalQuestions","Phone","cStatus","setCStatus","Fragment","src","SleepingUnicorn","WokeUnicorn","alt","a","fetch","then","response","json","res","mFetch","forEach","element","push","console","log","fillModel","LesGoButton","Header","Home","QuestionContextProvider","qStatusState","setQStatusState","qNumberState","setQNumberState","questionsState","setQuestionsState","Provider","value","App","ReactDOM","render","createElement","document","getElementById"],"mappings":"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","file":"static/js/main.c1c10a5c.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./PhoneScreen.css\";\n\nconst PhoneScreen = (props: any): JSX.Element => {\n    return <div className=\"pscreen\">{props.children}</div>;\n};\n\nexport default PhoneScreen;\n","interface QuestionInterface {\n    category: string,\n    type: string,\n    difficulty: string,\n    question: string,\n    correct_answer: string,\n    incorrect_answers: string,\n}\n\nclass Question {\n    constructor(question: QuestionInterface) {\n        this.type = question['type'];\n        \n        this.category = question['category'];\n        this.difficulty = question['difficulty'];\n        this.title = question['question'];\n        this.correctOption = question['correct_answer'];\n        this.incorrectOptions = question['incorrect_answers'];\n\n        let correctPos = Math.ceil(Math.random() * 4) - 1;\n\n        this.correctOptionNo = correctPos;\n        this.options = [...this.incorrectOptions];\n\n        this.options.splice(correctPos, 0, this.correctOption);\n    }\n\n    title: string = \"\";\n    category: string = \"\";\n    type: string = \"\";\n    difficulty: string = '';\n    correctOption: string = \"\";\n    incorrectOptions: string = \"\";\n\n    options: string[] = [];\n    correctOptionNo: number = 0;\n}\n\nvar Questions: Question[] = [];\n\nexport default Questions;\nexport { Question };\nexport type { QuestionInterface };\n","import React from \"react\";\nimport Questions, { Question } from \"../models/questions\";\n\nconst QuestionContext = React.createContext({\n    qStatus: \"idle\",\n    setQStatus: function (newQStatus: string): void {},\n    qNumber: 0,\n    setQNumber: function (newQNumber: number): void {},\n    questions: Questions,\n    setQuestions: function (newQuestions: Question[]): void {},\n});\n\nexport default QuestionContext;\n","import React, { useContext } from \"react\";\nimport QuestionContext from \"../../../context/question_context\";\n\nimport \"../HugeButton.css\";\n\nconst NextButton = (): JSX.Element => {\n\n    let ctx = useContext(QuestionContext);\n\n    const handleClick = () => {\n        ctx.setQNumber(ctx.qNumber + 1);\n    }\n\n    return (\n        <button className=\"btn-huge next-btn\" onClick={handleClick}>\n            <p>Next</p>\n        </button>\n    );\n};\n\nexport default NextButton;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props: any): JSX.Element => {\n    return (\n        <div\n            className=\"card\"\n            style={{ width: props.width, height: props.height }}\n        >\n            {props.children}\n        </div>\n    );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./QOption.css\";\n\nconst Option = (props: any): JSX.Element => {\n    return (\n        <div className=\"option\">\n            <p className=\"option-text\">{props.children}</p>\n            <div className={`is-chosen-circle ${props.isChosen ? 'on': ''}`}></div>\n        </div>\n    );\n};\n\nexport default Option;\n","import React from \"react\";\n\nimport \"./QuestionTitle.css\";\n\nconst QuestionTitle = (props: any): JSX.Element => {\n    return (\n        <p className=\"question\">\n            <span>{props.children}</span>\n        </p>\n    );\n};\n\nexport default QuestionTitle;\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport Card from \"../../components/card/Card\";\nimport QuestionContext from \"../../context/question_context\";\nimport QOption from \"../option/QOption\";\nimport QuestionTitle from \"../question-title/QuestionTitle\";\n\nimport \"./QuestionCard.css\";\n\nconst QuestionCard = (props: any): JSX.Element => {\n    let ctx = useContext(QuestionContext);\n\n    let [question, setQuestion] = useState(ctx.questions[0]);\n\n    let parser = new DOMParser();\n\n    useEffect(() => {\n        setQuestion(ctx.questions[ctx.qNumber]);\n    }, [ctx.qNumber, ctx.questions]);\n\n    return (\n        <Card width=\"80%\" height=\"70%\">\n            <div className=\"question-card\">\n                <QuestionTitle>\n                    {\n                        parser.parseFromString(question.title, \"text/html\").body\n                            .textContent\n                    }\n                </QuestionTitle>\n                <QOption isChosen={false}>{question.options[0]}</QOption>\n                <QOption isChosen={false}>{question.options[1]}</QOption>\n                <QOption isChosen={false}>{question.options[2]}</QOption>\n                <QOption isChosen={false}>{question.options[3]}</QOption>\n            </div>\n        </Card>\n    );\n};\n\nexport default QuestionCard;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport QuestionContext from \"../../context/question_context\";\n\nimport \"./QuestionMeter.css\";\n\nconst QuestionMeter = (props: any): JSX.Element => {\n    let ctx = useContext(QuestionContext);\n\n    let [questionNumber, setQuestionNumber] = useState(ctx.qNumber);\n    let [totalQuestions, setTotalQuestions] = useState(ctx.questions.length);\n\n    useEffect(() => {\n        setQuestionNumber(ctx.qNumber);\n        setTotalQuestions(ctx.questions.length);\n    }, [ctx.qNumber, ctx.questions.length]);\n\n    return (\n        <div className=\"question-meter\">\n            <div className=\"question-count\">\n                Question {questionNumber + 1}\n                <span className=\"total-questions\">/{totalQuestions}</span>\n            </div>\n            <div className=\"question-progress-meter\">\n                <div\n                    className=\"question-progress\"\n                    style={{ width: \"20%\" }}\n                ></div>\n            </div>\n        </div>\n    );\n};\n\nexport default QuestionMeter;\n","export default __webpack_public_path__ + \"static/media/unicorn_sleep.8fabcae7.png\";","export default __webpack_public_path__ + \"static/media/unicorn_woke.44279fb6.png\";","import React, { useContext, useEffect, useState } from \"react\";\n\nimport PhoneScreen from \"../../components/screen/PhoneScreen\";\nimport NextButton from \"../../components/buttons/next-button/NextButton\";\nimport QuestionCard from \"../question-card/QuestionCard\";\nimport QuestionMeter from \"../../containers/question-meter/QuestionMeter\";\n\nimport QuestionContext from \"../../context/question_context\";\n\nimport SleepingUnicorn from \"../../assets/icons/unicorn_sleep.png\";\nimport WokeUnicorn from \"../../assets/icons/unicorn_woke.png\";\n\nimport \"./Phone.css\";\n\nconst Phone = (props: any): JSX.Element => {\n    const ctx = useContext(QuestionContext);\n    var [cStatus, setCStatus] = useState(ctx.qStatus);\n\n    useEffect(() => {\n        setCStatus(ctx.qStatus);\n    }, [ctx.qStatus]);\n\n    return (\n        <PhoneScreen>\n            {cStatus === \"fetched\" ? (\n                <React.Fragment>\n                    <QuestionMeter></QuestionMeter>\n                    <QuestionCard></QuestionCard>\n                    <NextButton></NextButton>\n                </React.Fragment>\n            ) : (\n                <img\n                    src={cStatus === \"idle\" ? SleepingUnicorn : WokeUnicorn}\n                    alt=\"Sleeping Unicorn\"\n                    width={\"150px\"}\n                    height={\"150px\"}\n                ></img>\n            )}\n        </PhoneScreen>\n    );\n};\n\nexport default Phone;\n","async function mFetch (): Promise <Object> {\n    return await fetch('https://opentdb.com/api.php?amount=10&type=multiple').then((response: Response) => {\n        return response.json();\n    }).then((res => {\n        return res;\n    }));\n}\n\nexport default mFetch;","import { Question, QuestionInterface } from \"../models/questions\";\nimport mFetch from \"./m-fetch\";\n\ninterface FetchResult {\n    results: QuestionInterface[],\n    response_code: number,\n}\n\nasync function fillModel(questions: Question[]) {\n    let data = (await mFetch() as FetchResult)['results'];\n \n    data.forEach((element: QuestionInterface) => {\n        questions.push(new Question(element));\n    });\n\n    console.log(questions);\n}\n\nexport default fillModel;\n","import React, { useContext } from \"react\";\nimport QuestionContext from \"../../../context/question_context\";\nimport fillModel from \"../../../helpers-funcs/m-fill-model\";\n\nimport \"../HugeButton.css\";\n\nconst LesGoButton = (): JSX.Element => {\n    var ctx = useContext(QuestionContext);\n\n    async function handleClick() {\n        ctx.setQStatus(\"fetching\");\n        await fillModel(ctx.questions);\n        ctx.setQStatus(\"fetched\");\n    }\n\n    return (\n        <button onClick={handleClick} className=\"btn-huge next-btn\">\n            <p>Lesss Go</p>\n        </button>\n    );\n};\n\nexport default LesGoButton;\n","import React from \"react\";\n\nimport './Header.css';\n\nconst Header = (): JSX.Element => {\n    return (\n        <header className=\"heamder\">\n            <h2 className=\"trivia-chad-title\">Trivia Chad</h2>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport Phone from \"../../containers/phone/Phone\";\nimport LesGoButton from \"../buttons/les-go-button/LesGoButton\";\nimport Header from \"../header/Header\";\n\nimport \"./Home.css\";\n\nconst Home = (): JSX.Element => {\n    return (\n        <div className=\"home\">\n            <Header></Header>\n            <LesGoButton></LesGoButton>\n            <Phone></Phone>\n        </div>\n    );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Question } from \"../models/questions\";\nimport QuestionContext from \"./question_context\";\n\nconst QuestionContextProvider = (props: any): JSX.Element => {\n    var [qStatusState, setQStatusState] = useState(\"idle\");\n    var [qNumberState, setQNumberState] = useState(0);\n    var [questionsState, setQuestionsState] = useState([] as Question[]);\n\n    return (\n        <QuestionContext.Provider\n            value={{\n                qStatus: qStatusState,\n                setQStatus: setQStatusState,\n                qNumber: qNumberState,\n                setQNumber: setQNumberState,\n                questions: questionsState,\n                setQuestions: setQuestionsState,\n            }}\n        >\n            {props.children}\n        </QuestionContext.Provider>\n    );\n};\n\nexport default QuestionContextProvider;\n","import Home from \"./components/home/Home\";\nimport QuestionContextProvider from \"./context/QuestionContextProvider\";\nimport \"./style.css\";\n\nconst App = () => {\n    return (\n        <QuestionContextProvider>\n            <Home></Home>\n        </QuestionContextProvider>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(React.createElement(App),\n    document.getElementById('root')\n);"],"sourceRoot":""}